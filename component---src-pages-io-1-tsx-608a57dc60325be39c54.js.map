{"version":3,"file":"component---src-pages-io-1-tsx-608a57dc60325be39c54.js","mappings":"qQAoBe,SAASA,IACpB,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAACC,MAAOA,EAAAA,GAAMC,SAAA,EACxBC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,KACZL,EAAAA,EAAAA,MAACM,EAAAA,EAAM,CACHC,eAAgB,CACZC,KAAM,MACRL,SAAA,EAEFC,EAAAA,EAAAA,KAAA,QAAMK,QAAQ,WACdL,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yEAIPC,EAAAA,EAAAA,KAAA,QACIM,KAAK,cACLC,QAAQ,0EAEZP,EAAAA,EAAAA,KAAA,QAAMQ,IAAI,YAAYC,KAAK,4BAE/BT,EAAAA,EAAAA,KAACU,EAAAA,EAAM,KACPV,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CAACC,MAAM,iCAEjBhB,EAAAA,EAAAA,MAACiB,EAAAA,EAAS,CACNC,GAAG,QACHC,SAAS,KACTC,UAAU,OACVC,GAAI,CACAC,WAAY,EACZC,YAAa,EACbC,aAAc,EACdC,cAAe,GACjBtB,SAAA,EAEFH,EAAAA,EAAAA,MAAC0B,EAAAA,EAAU,CAACC,MAAM,gBAAgBC,cAAY,EAAAzB,SAAA,CAAC,ozBAe3CH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yHAKJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4IAKJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qGAIH,sbAUTC,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACG,QAAQ,KAAKD,cAAY,EAAAzB,SAAC,oCAGtCH,EAAAA,EAAAA,MAAC0B,EAAAA,EAAU,CAACC,MAAM,gBAAgBC,cAAY,EAAAzB,SAAA,CAAC,wEAG3CH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mVASJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0hBAaJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wGAIJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+cAcZC,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACG,QAAQ,KAAKD,cAAY,EAAAzB,SAAC,wBAGtCC,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACC,MAAM,gBAAgBC,cAAY,EAAAzB,UAC1CH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,KAAGS,KAAK,oCAAmCV,SAAC,oGAMhDC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,KAAGS,KAAK,gEAA+DV,SAAC,gEAK5EC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,KAAGS,KAAK,wCAAuCV,SAAC,0EAShEC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,MAGnB,C","sources":["webpack://qped-website/./src/pages/io1.tsx"],"sourcesContent":["import {\n    Container,\n    CssBaseline,\n    Divider,\n    Grid,\n    ThemeProvider,\n    Typography,\n} from \"@mui/material\";\nimport { Contact } from \"Contact\";\nimport { HomeImage } from \"HomeImage\";\nimport { Library } from \"Library\";\nimport { Partners } from \"Partners\";\nimport { Helmet } from \"react-helmet\";\nimport { theme } from \"theme\";\nimport { Align } from \"ui/Align\";\nimport { Link } from \"ui/Link\";\nimport { Footer } from \"../Footer\";\nimport { Header } from \"../Header\";\nimport React from \"react\";\n\nexport default function Index() {\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Helmet\n                htmlAttributes={{\n                    lang: \"en\",\n                }}\n            >\n                <meta charSet=\"utf-8\" />\n                <title>\n                    QPED: Quality-focussed Programming Education: Intellectual\n                    Output 1\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"QPED: Quality-focussed Programming Education - Intellectual Output 1\"\n                />\n                <link rel=\"canonical\" href=\"https://www.qped.eu\" />\n            </Helmet>\n            <Header />\n            <HomeImage title=\"Intellectual Output 1: TILE\" />\n            {/* Hero unit */}\n            <Container\n                id=\"about\"\n                maxWidth=\"md\"\n                component=\"main\"\n                sx={{\n                    paddingTop: 8,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                    paddingBottom: 6,\n                }}\n            >\n                <Typography color=\"textSecondary\" gutterBottom>\n                    Integrating software testing early into programming does\n                    have many benefits for students. For example, students can\n                    easier accept that testing is part of writing software, the\n                    design and implementation of software improves, software is\n                    easier to test, and it encourages students to more carefully\n                    read the assignments. Unfortunately, many drawbacks still\n                    exist, resulting in introductory programming courses that\n                    are, even today, being taught without testing. For example,\n                    the negative attitude of students towards testing, and most\n                    programming courses are already fully packed. To help\n                    educators to improve this situation, we developed the TILE\n                    approach: Test Informed Learning with Examples. It is a new\n                    approach to introduce software testing in introductory and\n                    advanced programming courses in the following ways:\n                    <ul>\n                        <li>\n                            early introduce students to testing from the very\n                            first example program they see and write themselves\n                            in exercises;\n                        </li>\n                        <li>\n                            seamless testing will be introduced in a smooth and\n                            continuous way as an inherent part of programming,\n                            and not as a separate activity;\n                        </li>\n                        <li>\n                            subtly we will make use of clever and indirect\n                            methods to teach testing knowledge and skills.\n                        </li>\n                    </ul>\n                    TILE aims to introduce testing in such a subtle way that\n                    testing is taught naturally as an inherent part of\n                    programming and not a separate activity. TILE examples are\n                    related to test runs, test cases, test messages and the\n                    alteration of the domain of exercises. These can be\n                    gradually be integrated into existing curricula and,\n                    consequently, using TILE requires less effort than\n                    completely overhauling existing programming courses.\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    How to apply in your education\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    To apply TILE in your education, four different types are\n                    developed:\n                    <ul>\n                        <li>\n                            Test run TILES - When we show (or ask) our students\n                            what happens when we run (or execute) a piece of\n                            programming code, we can, with a minor change of the\n                            wording make a TILE out of the example. For example,\n                            we can ask the students to test the program, or ask\n                            them to assert the right output instead of asking\n                            them to run the program.\n                        </li>\n                        <li>\n                            Test cases TILES - If we ask students to test their\n                            programs, they often only test happy path execution\n                            and hence do not really get that awareness we want\n                            about the importance of testing. A better way to\n                            TILE exercises would be to add more concrete\n                            examples of, or ideas about, possible test cases\n                            that the student should use to check the workings of\n                            their code. These example test cases should not just\n                            include the happy path tests, but also make sure\n                            that their code is challenged on some corner cases\n                            and other exceptional cases.\n                        </li>\n                        <li>\n                            Test message TILES - TILES of this type hide a\n                            subliminal message about the importance of testing.\n                        </li>\n                        <li>\n                            Test domain TILES - TILES of this type require a bit\n                            more creativity than the previous ones. In some\n                            programming exercises, we use examples from a\n                            well-known domain. For example, in explanations of\n                            Object-Oriented Programming one might use the\n                            concept of shapes with classes such as Rectangle and\n                            Circle as a domain. If the domain does not influence\n                            the concepts we are teaching, then it can be\n                            replaced with examples from the testing domain\n                            directly.\n                        </li>\n                    </ul>\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    Available material\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    <ul>\n                        <li>\n                            <a href=\"https://tile-repository.github.io\">\n                                A large number of TILED exercises has been\n                                developed and is available in our TILE\n                                repository\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://tile-repository.github.io/nifties/2022/nifty2022.html\">\n                                Example of a complex, project-like assignment\n                                using TILE\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://qped.eu/tile_in_education.pdf\">\n                                More information about how to apply TILE in your\n                                education\n                            </a>\n                        </li>\n                    </ul>\n                </Typography>\n            </Container>\n\n            <Footer />\n        </ThemeProvider>\n    );\n}\n"],"names":["Index","_jsxs","ThemeProvider","theme","children","_jsx","CssBaseline","Helmet","htmlAttributes","lang","charSet","name","content","rel","href","Header","HomeImage","title","Container","id","maxWidth","component","sx","paddingTop","paddingLeft","paddingRight","paddingBottom","Typography","color","gutterBottom","variant","Footer"],"sourceRoot":""}