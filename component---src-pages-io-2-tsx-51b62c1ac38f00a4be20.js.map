{"version":3,"file":"component---src-pages-io-2-tsx-51b62c1ac38f00a4be20.js","mappings":"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","sources":["webpack://qped-website/./src/pages/io2.tsx"],"sourcesContent":["import {\n    Container,\n    CssBaseline,\n    Divider,\n    Grid,\n    ThemeProvider,\n    Typography,\n} from \"@mui/material\";\nimport { Contact } from \"Contact\";\nimport { HomeImage } from \"HomeImage\";\nimport { Library } from \"Library\";\nimport { Partners } from \"Partners\";\nimport { Helmet } from \"react-helmet\";\nimport { theme } from \"theme\";\nimport { Align } from \"ui/Align\";\nimport { Link } from \"ui/Link\";\nimport { Footer } from \"../Footer\";\nimport { Header } from \"../Header\";\nimport React from \"react\";\n\nexport default function Index() {\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Helmet\n                htmlAttributes={{\n                    lang: \"en\",\n                }}\n            >\n                <meta charSet=\"utf-8\" />\n                <title>\n                    QPED: Quality-focussed Programming Education: Intellectual\n                    Output 2\n                </title>\n                <meta\n                    name=\"description\"\n                    content=\"QPED: Quality-focussed Programming Education - Intellectual Output 2\"\n                />\n                <link rel=\"canonical\" href=\"https://www.qped.eu\" />\n            </Helmet>\n            <Header />\n            <HomeImage title=\"Intellectual Output 2: Procedural guidance\" />\n            {/* Hero unit */}\n            <Container\n                id=\"about\"\n                maxWidth=\"md\"\n                component=\"main\"\n                sx={{\n                    paddingTop: 8,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                    paddingBottom: 6,\n                }}\n            >\n                <Typography color=\"textSecondary\" gutterBottom>\n                    Developing and testing software is a complex activity. A\n                    procedure has been developed to design and specify\n                    object-oriented (OO) software step by step. A distinction is\n                    made between three different parts, namely an External View\n                    (also known as API), an Internal View (concerning attributes\n                    and private methods), and an Annotated Code View (the\n                    working code). Each of these parts are made up of three\n                    steps, namely Analysis (collecting all the information\n                    needed to produce the design and specification), Design (in\n                    which the structure is determined), and Specification (in\n                    which the behaviour is described). The External View, the\n                    Internal View and the Annotated Code View are then\n                    translated step-by-step into the necessary tests. Explicit\n                    guidance for each step is provided.{\" \"}\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    The procedure not only supports the development of the core\n                    functionality, but also caters for robustness. The procedure\n                    allows for an iterative and incremental development of\n                    software where it is easy to go back to an earlier step, but\n                    it is also possible to choose one's own order of execution\n                    of the different steps. The procedure does require that\n                    eventually all views are checked for consistency: in the end\n                    it is the implementation that must fulfil what is promised\n                    by the API!{\" \"}\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    The procedure has been evaluated on two groups of students.\n                    It became clear that the first group could not be motivated\n                    to produce specifications before coding. Developing software\n                    through trial and error was preferred. In a second study, we\n                    gave the students the full External View of each class.\n                    Students now appreciated the specifications, which was\n                    reflected in the quality of the software: fewer errors in\n                    the code and tests that found more errors. The evaluation\n                    provided us with two important insights. First, giving\n                    specifications is an important starting point. Students\n                    learn to appreciate the specifications and will probably\n                    draft them themselves for more complex issues. The procedure\n                    helps them with that.\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    Secondly, we have to conclude that many requirements are not\n                    clear at all without precise specification. Students give\n                    their own interpretation to this, which stimulates\n                    trial-and-error behaviour. We are conducting follow-up\n                    research on both aspects.\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    How to apply in your education\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    The procedure can be taught in the following ways:\n                    <ul>\n                        <li>\n                            The procedure can be taught as a whole as part of a\n                            Software Engineering course. Such a course is\n                            typically placed in a second or third study year and\n                            requires prior knowledge and experience with\n                            programming and testing.\n                        </li>\n                        <li>\n                            Parts of the procedure can be distributed over\n                            several courses. Examples are:\n                            <ul>\n                                <li>\n                                    Functions are discussed in an introductory\n                                    programming course. In addition to teaching\n                                    the syntax and the use of functions, the\n                                    first column (External View) and the third\n                                    column (Code View) can be applied from the\n                                    procedure. These views indicate which\n                                    aspects of a function can be distinguished,\n                                    in which order they can be developed, how\n                                    this leads to a design, specifications,\n                                    implementation and associated tests, and\n                                    documentation.\n                                </li>\n                                <li>\n                                    In a first year OO programming course,\n                                    classes and methods are introduced. Here the\n                                    approach may be limited to developing an\n                                    External View and Code View with associated\n                                    tests. Attributes are added to classes, but\n                                    describing them precisely in the form of an\n                                    Internal View is postponed until a follow-up\n                                    course (see the next bullet).\n                                </li>\n                                <li>\n                                    In a course about data structures and\n                                    algorithms, the Internal View is of special\n                                    interest besides the External View and Code\n                                    View. Here, the translation from domain\n                                    variables to attributes and corresponding\n                                    specifications is a critical activity.\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    The procedure itself is a complex thing for beginning\n                    students. Learning the concepts underlying the procedure and\n                    how to use the procedure cost time. It is important to\n                    introduce the procedure using simple examples, so the\n                    student has to deal with one complexity at the time. Once\n                    the procedure is understood, it can be used to solve more\n                    complex exercises. It is important to understand that the\n                    use of the procedure is not a goal in itself; instead, it\n                    provides guidance where the complexity is greater.\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    A good start is to give students the specifications from the\n                    beginning, before they have to construct these by\n                    themselves. In this approach, students learn to read the\n                    specifications and experience the benefits of using them:\n                    they have a grip on the implementation of the functionality,\n                    can check whether all requirements have been met and can\n                    draw up test cases more systematically. In a next step,\n                    students learn how to draw up specifications using the\n                    procedure. After that, more and more complex situations can\n                    be solved. The procedure can be explained through\n                    traditional classroom teaching and practiced by homework\n                    assignments that students work on alone or in groups. The\n                    procedure can also be taught by having the entire class, or\n                    groups of students, work together on assignments and\n                    frequently, after each procedural step, share their results\n                    and discuss them. We think this approach is most effective.\n                    Together, many more aspects are found that need to be taken\n                    into account in a design and specification. It is precisely\n                    this experience that is important! Worked-out solutions for\n                    twenty exercises, ranging from simple to more complex ones,\n                    have been provided. Several of these solutions are presented\n                    in two versions: one where each step is worked out in detail\n                    and all considerations are described, and one where only the\n                    results of each step are recorded. The exercises and\n                    solutions can be used in education.\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    Available material\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    <ul>\n                        <li>\n                            <a href=\"https://qped.eu/pg.pdf\">\n                                Technical report that describes the procedural\n                                guidance in detail\n                            </a>\n                        </li>\n                        <li>\n                            The development of the{\" \"}\n                            <a href=\"https://pro.quarterfall.com/do/96dktwhg\">\n                                power function\n                            </a>{\" \"}\n                            is an example of a small exercise and is implemented\n                            in Quarterfall. The student has to develop the\n                            function step-by-step in terms of the external view\n                            as well as the code view. Because it is a function,\n                            the internal view is not applicable here. The\n                            student can view the results immediately after each\n                            step.\n                        </li>\n                        <li>\n                            Here are a few more examples of exercises that are\n                            especially suitable to beginners:\n                            <ul>\n                                <li>\n                                    <a href=\"https://pro.quarterfall.com/do/hcl1j6qq\">\n                                        Simple Temperature Convertor\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"https://pro.quarterfall.com/do/pgr2sd3v\">\n                                        Repeated Temperature Convertor\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"https://pro.quarterfall.com/do/8mlisubt\">\n                                        Repeated Temperature Convertor: Celsius\n                                        to Fahrenheit and Vice-Versa\n                                    </a>\n                                </li>\n\n                                <li>\n                                    <a href=\"https://pro.quarterfall.com/do/myehpwta\">\n                                        Repeated Temperature Convertor: Celsius,\n                                        Fahrenheit, and Kelvin\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"https://pro.quarterfall.com/do/9jss7u2s\">\n                                        Repeated Temperature Convertor: Abstract\n                                        and Sub Classes\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"https://pro.quarterfall.com/do/agwn58bc\">\n                                        Repeated Temperature Convertor:\n                                        Exceptions\n                                    </a>\n                                </li>\n                            </ul>\n                        </li>\n                        <li>\n                            A more extensive task is the development of{\" \"}\n                            <a href=\"https://pro.quarterfall.com/do/j7qg0pcp\">\n                                class Bag\n                            </a>\n                            . The exercise is implemented in Quarterfall. The\n                            student is given the specifications and has to\n                            implement the class Bag and the necessary test cases\n                            according to the specifications. The student submits\n                            her/his implementation and test which are\n                            automatically checked on correctness and test\n                            completeness.\n                        </li>\n\n                        <li>\n                            Lastly, the{\" \"}\n                            <a href=\"https://qped.eu/minmax.pdf\">MinMax</a>{\" \"}\n                            class is an example of an exercise in which all\n                            steps of the procedure are followed. Students who\n                            has studied the whole procedure can make this\n                            exercise. Teachers can use it as basic material to\n                            develop an own assignment.\n                        </li>\n                        <li>\n                            Note: more exercises are being worked on and will be\n                            added here in the future.\n                        </li>\n                    </ul>\n                </Typography>\n            </Container>\n\n            <Footer />\n        </ThemeProvider>\n    );\n}\n"],"names":["Index","_jsxs","ThemeProvider","theme","children","_jsx","CssBaseline","Helmet","htmlAttributes","lang","charSet","name","content","rel","href","Header","HomeImage","title","Container","id","maxWidth","component","sx","paddingTop","paddingLeft","paddingRight","paddingBottom","Typography","color","gutterBottom","variant","Footer"],"sourceRoot":""}